[{"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reportWebVitals.js":"1","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/App.js":"2","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/index.js":"3","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Login.js":"4","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Register.js":"5","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/EditNote.js":"6","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/ShowNote.js":"7","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Note.js":"8","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/NotesForm.js":"9","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/note.js":"10","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/index.js":"11","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/user.js":"12","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/containers/NotesContainer.js":"13","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/actions/noteActions.js":"14","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/actions/userAction.js":"15"},{"size":362,"mtime":1606933242629,"results":"16","hashOfConfig":"17"},{"size":1286,"mtime":1607377101474,"results":"18","hashOfConfig":"17"},{"size":533,"mtime":1607383972635,"results":"19","hashOfConfig":"17"},{"size":2009,"mtime":1607437674995,"results":"20","hashOfConfig":"17"},{"size":2121,"mtime":1607437768217,"results":"21","hashOfConfig":"17"},{"size":2673,"mtime":1607438230530,"results":"22","hashOfConfig":"17"},{"size":1942,"mtime":1607438638829,"results":"23","hashOfConfig":"17"},{"size":1061,"mtime":1607437888140,"results":"24","hashOfConfig":"17"},{"size":1781,"mtime":1607438104389,"results":"25","hashOfConfig":"17"},{"size":627,"mtime":1607437081619,"results":"26","hashOfConfig":"17"},{"size":148,"mtime":1607437213639,"results":"27","hashOfConfig":"17"},{"size":318,"mtime":1607437145768,"results":"28","hashOfConfig":"17"},{"size":1803,"mtime":1607438003855,"results":"29","hashOfConfig":"17"},{"size":387,"mtime":1607371612676,"results":"30","hashOfConfig":"17"},{"size":306,"mtime":1607437040144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ge7jrl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reportWebVitals.js",[],["66","67"],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/App.js",["68"],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/index.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Login.js",["69"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport './Component.css'\nimport { loginSuccess } from '../actions/userAction'\nimport { getUserNotes } from '../actions/noteActions'\nimport { connect } from 'react-redux'\n\nexport class Login extends Component {\n\n    constructor() {\n        super()\n\n        this.state = {\n            username: '',\n        }\n    }\n \n    handleLoginChange = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    handleLoginSubmit = (event) => {\n        event.preventDefault()\n        \n        const loginData = {\n            username: this.state.username\n        }\n\n        this.setState({\n            username: ''\n        })\n    }\n\n    render() {\n        return (\n            \n                        <div className='login-card' id='loginCard'>\n                            <h2>Flatnotes</h2>\n                            <p className='subtitle'>note taking app </p>\n                                { this.state.showAlert ? <div className=\"alert\" role=\"alert\" id='loginAlert'>Username not found</div> : null }\n                            <form onSubmit={this.handleLoginSubmit}>\n                                <label className='input-label'>Username:</label>\n                                <br />\n                                <input className='input-textbox' type='text' placeholder='Username' value={this.state.username} onChange={this.handleLoginChange}  />\n                                <br />\n                                <input className='input-btn' type='submit' value='Login' />\n                            </form>\n                            <Link  to=\"/register\">Register</Link>\n                        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loginSuccess: (user) => dispatch(loginSuccess(user)),\n        getUserNotes: (userNotes) => dispatch(getUserNotes(userNotes))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login)","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Register.js",["70"],"import React, {Component, Fragment} from 'react'\nimport './Component.css'\nimport { registerSuccess } from '../actions/userAction'\nimport { getUserNotes } from '../actions/noteActions'\nimport { connect } from 'react-redux'\n\nexport class Register extends Component {\n    constructor(){\n        super()\n        this.state ={\n            first_name: '',\n            last_name:'',\n            username:''\n        }\n    }\n\n        handleRegistrySubmit = (event) =>{\n            event.PreventDefault()\n\n            const registryData ={\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                username: this.state.username\n            } \n        }\n\n        handleRegisterChange = (event) => {\n            this.setState({\n                [event.target.name]: event.target.value\n            })\n        }\n\n    render(){\n        return(\n            <Fragment>\n            <h2>new registry</h2>\n            <div>\n                <form submit={this.handleRegistrySubmit}>\n                    <label> First name: </label>\n                    <input type='text' name='first_name' placeholder='First Name' value={this.state.first_name} onChange={this.handleRegisterChange} />\n                    <br />\n                    <label> Last name: </label>\n                    <input type='text' name='last_name' placeholder='Last Name' value={this.state.last_name} onChange={this.handleRegisterChange}/>\n                    <br />\n                    <label> Username: </label>\n                    <input type='text' name='username' placeholder='username' value={this.state.username} onChange={this.handleRegisterChange}/>\n                    <br />\n                    <input className='input-btn' type='submit' value='Register' />\n\n                </form>\n            </div>\n           </Fragment> \n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        registerSuccess: (user) => dispatch(registerSuccess(user)),\n        getUserNotes: (userNotes) => dispatch(getUserNotes(userNotes))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Register)","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/EditNote.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/ShowNote.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/Note.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/components/NotesForm.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/note.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/index.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/reducers/user.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/containers/NotesContainer.js",["71"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Note from '../components/Note'\nimport './Container.css'\nimport { logoutSuccess } from '../actions/userAction'\n \nexport class NotesContainer extends Component {\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.history.push('/login')\n        }\n    }\n\n    // renderNotes = () => {\n    //     return this.props.notes.map(note => <Note note={note} key={note.id} />)\n    // }\n\n    handleCreateNoteClick = () => {\n        this.props.history.push('/notes/new')\n    }\n\n    handleLogOutClick = () => {\n        this.props.logoutSuccess()\n        this.props.history.push('/login')\n    }\n\n    render() {\n        \n        return (\n            <div className='container h-100'>\n                <div className='row align-items-center h-100'>\n                    <div className='mx-auto'>\n                        <div className='btn-container'>\n                            <div className=\"note-container-dropdown dropdown\">\n                            </div>\n                            <button className='new-note-btn' id='createNoteBtn' onClick={this.handleCreateNoteClick}>Create Note</button>\n                            <button className='new-note-btn' id='logOutBtn' onClick={this.handleLogOutClick}>Logout</button>\n                        </div>\n                        {/* {this.renderNotes()} */}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        notes: state.notes\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logoutSuccess: () => dispatch(logoutSuccess())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotesContainer)","/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/actions/noteActions.js",[],"/Users/thebboy26/Desktop/Second Flatiron/solo-projects/Flatnotes/flatnotes-frontend/src/actions/userAction.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":27,"column":15,"nodeType":"78","messageId":"79","endLine":27,"endColumn":24},{"ruleId":"76","severity":1,"message":"81","line":20,"column":19,"nodeType":"78","messageId":"79","endLine":20,"endColumn":31},{"ruleId":"76","severity":1,"message":"82","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":12},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'loginData' is assigned a value but never used.","'registryData' is assigned a value but never used.","'Note' is defined but never used.","no-global-assign","no-unsafe-negation"]